{"ast":null,"code":"var _jsxFileName = \"/home/sambhav/TBT/Innovisionaries/Innovisionaries/trashtrack/Frontend/src/components/Nearest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearestMunicipalityFinder = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearestMunicipality, setNearestMunicipality] = useState('');\n  const [minDistance, setMinDistance] = useState(null);\n  useEffect(() => {\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setUserLocation(position.coords);\n        }, error => {\n          console.error('Error getting user location:', error);\n        });\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n      }\n    };\n    getUserLocation();\n  }, []);\n  useEffect(() => {\n    const calculateDistance = (coord1, coord2) => {\n      const R = 6371; // Radius of the Earth in kilometers\n      const lat1 = coord1.latitude;\n      const lon1 = coord1.longitude;\n      const lat2 = coord2.latitude;\n      const lon2 = coord2.longitude;\n      const dLat = (lat2 - lat1) * Math.PI / 180;\n      const dLon = (lon2 - lon1) * Math.PI / 180;\n      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c;\n      return distance; // Distance in kilometers\n    };\n    const municipalities = [{\n      name: 'Municipal council Bilaspur',\n      latitude: 31.33918975292773,\n      longitude: 76.75704773589915\n    }, {\n      name: 'Municipal Council Ghumarwin',\n      latitude: 31.445405767767912,\n      longitude: 76.70731007927567\n    }, {\n      name: 'Municipal Council Shree Naina Devi Ji',\n      latitude: 31.305725436008455,\n      longitude: 76.53465866256789\n    }, {\n      name: 'Nagar Panchayat Talai',\n      latitude: 31.30681204894085,\n      longitude: 76.7395976136065\n    }, {\n      name: 'Municipal Council Mehatpur Basdehra',\n      latitude: 31.405859457029543,\n      longitude: 76.33725445559858\n    }, {\n      name: 'Municipal Council Santokhgarh',\n      latitude: 31.468644643695193,\n      longitude: 76.2713782287069\n    }, {\n      name: 'Municipal Council Una',\n      latitude: 31.468273105936202,\n      longitude: 76.2691076578011\n    }, {\n      name: 'Nagar Panchayat AMB',\n      latitude: 31.684757835144012,\n      longitude: 76.11656942023795\n    }, {\n      name: 'Nagar Panchayat Daulatpur Chowk',\n      latitude: 31.686038172003478,\n      longitude: 76.1160242879777\n    }, {\n      name: 'Nagar Panchayat Gagret',\n      latitude: 31.657411401399827,\n      longitude: 76.059724764418\n    }, {\n      name: 'Nagar Panchayat Tahliwal',\n      latitude: 31.684776094566583,\n      longitude: 76.11655869140195\n    }, {\n      name: 'Municipal Council Chamba',\n      latitude: 32.55501963539812,\n      longitude: 76.12570860674597\n    }, {\n      name: 'Municipal Council Dalhousie',\n      latitude: 32.53900136153343,\n      longitude: 75.9627888785587\n    }, {\n      name: 'Nagar Panchayat Chowari',\n      latitude: 32.43229788312151,\n      longitude: 76.012277135582\n    }, {\n      name: 'Municipal Committee Office',\n      latitude: 32.10328535482609,\n      longitude: 76.27186501580479\n    }, {\n      name: 'Municipal Banquet Hall',\n      latitude: 32.08972185344799,\n      longitude: 76.26049296362078\n    }, {\n      name: 'Municipal Corporation',\n      latitude: 32.10322855182006,\n      longitude: 76.2718576928211\n    }, {\n      name: 'Municipal Council, Jawalamukhi, Kangra',\n      latitude: 31.874727629638677,\n      longitude: 76.32102272516669\n    }, {\n      name: 'Municipal Corporation Dharamshala',\n      latitude: 32.21555606447956,\n      longitude: 76.31824785211047\n    }, {\n      name: 'Municipal Council Palampur',\n      latitude: 32.11276625405875,\n      longitude: 76.53718860873454\n    }, {\n      name: 'Municipal Council Kullu',\n      latitude: 31.96315496290433,\n      longitude: 77.11527610768475\n    }, {\n      name: 'Municipal Council',\n      latitude: 31.990622766477255,\n      longitude: 76.79262437394692\n    }, {\n      name: 'Municipal Corporation Mandi',\n      latitude: 31.709374989707072,\n      longitude: 76.9311607591485\n    }, {\n      name: 'Municipal Committee',\n      latitude: 31.709369015219654,\n      longitude: 76.93116310008766\n    }, {\n      name: 'Municipal Council Rohru',\n      latitude: 31.20342904337866,\n      longitude: 77.75694850865035\n    }, {\n      name: 'Municipal council Rampur',\n      latitude: 31.447472357397892,\n      longitude: 77.62930798220307\n    }, {\n      name: 'Nagar Nigam ',\n      latitude: 31.105708,\n      longitude: 77.175713\n    }, {\n      name: 'Municipal corporation',\n      latitude: 31.10521,\n      longitude: 77.17073\n    }, {\n      name: 'Municipal corporation building',\n      latitude: 31.105440,\n      longitude: 77.170790\n    }, {\n      name: 'Municipal corporation Rajgarh',\n      latitude: 30.90696,\n      longitude: 77.10293\n    }, {\n      name: 'Municipal corporation Nahan',\n      latitude: 30.56262,\n      longitude: 77.29394\n    }, {\n      name: 'Municipal council Paonta sahib',\n      latitude: 30.43613,\n      longitude: 77.62395\n    }, {\n      name: 'MC office hamirpur',\n      latitude: 31.68563,\n      longitude: 76.52325\n    }, {\n      name: 'Municipal committee office',\n      latitude: 31.68551,\n      longitude: 76.5228\n    }];\n    if (userLocation) {\n      let minDistance = Number.MAX_SAFE_INTEGER;\n      let nearestMunicipality = '';\n      municipalities.forEach(municipality => {\n        const distance = calculateDistance(userLocation, {\n          latitude: municipality.latitude,\n          longitude: municipality.longitude\n        });\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestMunicipality = municipality.name;\n        }\n      });\n      setNearestMunicipality(nearestMunicipality);\n      setMinDistance(minDistance);\n    }\n  }, [userLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4 font-semibold\",\n      children: \"Nearest Municipality Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), userLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current location: \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium\",\n        children: [userLocation.latitude, \", \", userLocation.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), nearestMunicipality && minDistance && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The nearest municipality is \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium\",\n        children: nearestMunicipality\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }, this), \" at a distance of \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium\",\n        children: [\"..\", minDistance.tofixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 114\n      }, this), \"kilometers.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(NearestMunicipalityFinder, \"s8OypQOAjobWfYJ2Jjv9U328oSw=\");\n_c = NearestMunicipalityFinder;\nexport default NearestMunicipalityFinder;\nvar _c;\n$RefreshReg$(_c, \"NearestMunicipalityFinder\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NearestMunicipalityFinder","_s","userLocation","setUserLocation","nearestMunicipality","setNearestMunicipality","minDistance","setMinDistance","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","calculateDistance","coord1","coord2","R","lat1","lon1","lat2","lon2","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","municipalities","name","Number","MAX_SAFE_INTEGER","forEach","municipality","children","className","fileName","_jsxFileName","lineNumber","columnNumber","tofixed","_c","$RefreshReg$"],"sources":["/home/sambhav/TBT/Innovisionaries/Innovisionaries/trashtrack/Frontend/src/components/Nearest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst NearestMunicipalityFinder = () => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearestMunicipality, setNearestMunicipality] = useState('');\n  const [minDistance, setMinDistance] = useState(null);\n\n  useEffect(() => {\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const { latitude, longitude } = position.coords;\n            setUserLocation(position.coords)\n          },\n          (error) => {\n            console.error('Error getting user location:', error);\n          }\n        );\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n      }\n    };\n\n    \n\n   \n    getUserLocation();\n  }, []);\n\n  useEffect(() => {\n    const calculateDistance = (coord1, coord2) => {\n      const R = 6371; // Radius of the Earth in kilometers\n      const lat1 = coord1.latitude;\n      const lon1 = coord1.longitude;\n      const lat2 = coord2.latitude;\n      const lon2 = coord2.longitude;\n\n      const dLat = (lat2 - lat1) * Math.PI / 180;\n      const dLon = (lon2 - lon1) * Math.PI / 180;\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c;\n\n      return distance; // Distance in kilometers\n    };\n\n    const municipalities = [\n      { name: 'Municipal council Bilaspur', latitude: 31.33918975292773, longitude: 76.75704773589915 },\n      { name: 'Municipal Council Ghumarwin', latitude: 31.445405767767912, longitude: 76.70731007927567 },\n      { name: 'Municipal Council Shree Naina Devi Ji', latitude: 31.305725436008455, longitude: 76.53465866256789 },\n      { name: 'Nagar Panchayat Talai', latitude: 31.30681204894085, longitude: 76.7395976136065 },\n      { name: 'Municipal Council Mehatpur Basdehra', latitude: 31.405859457029543, longitude: 76.33725445559858 },\n      { name: 'Municipal Council Santokhgarh', latitude: 31.468644643695193, longitude: 76.2713782287069 },\n      { name: 'Municipal Council Una', latitude: 31.468273105936202, longitude: 76.2691076578011 },\n      { name: 'Nagar Panchayat AMB', latitude: 31.684757835144012, longitude: 76.11656942023795 },\n      { name: 'Nagar Panchayat Daulatpur Chowk', latitude: 31.686038172003478, longitude: 76.1160242879777 },\n      { name: 'Nagar Panchayat Gagret', latitude: 31.657411401399827, longitude: 76.059724764418 },\n      { name: 'Nagar Panchayat Tahliwal', latitude: 31.684776094566583, longitude: 76.11655869140195 },\n      { name: 'Municipal Council Chamba', latitude: 32.55501963539812, longitude: 76.12570860674597 },\n      { name: 'Municipal Council Dalhousie', latitude: 32.53900136153343, longitude: 75.9627888785587 },\n      { name: 'Nagar Panchayat Chowari', latitude: 32.43229788312151, longitude: 76.012277135582 },\n      { name: 'Municipal Committee Office', latitude: 32.10328535482609, longitude: 76.27186501580479 },\n      { name: 'Municipal Banquet Hall', latitude: 32.08972185344799, longitude: 76.26049296362078 },\n      { name: 'Municipal Corporation', latitude: 32.10322855182006, longitude: 76.2718576928211 },\n      { name: 'Municipal Council, Jawalamukhi, Kangra', latitude: 31.874727629638677, longitude: 76.32102272516669 },\n      { name: 'Municipal Corporation Dharamshala', latitude: 32.21555606447956, longitude: 76.31824785211047 },\n      { name: 'Municipal Council Palampur', latitude: 32.11276625405875, longitude: 76.53718860873454 },\n      { name: 'Municipal Council Kullu', latitude: 31.96315496290433, longitude: 77.11527610768475 },\n      { name: 'Municipal Council', latitude: 31.990622766477255, longitude: 76.79262437394692 },\n      { name: 'Municipal Corporation Mandi', latitude: 31.709374989707072, longitude: 76.9311607591485 },\n      { name: 'Municipal Committee', latitude: 31.709369015219654, longitude: 76.93116310008766 },\n      { name: 'Municipal Council Rohru', latitude: 31.20342904337866, longitude: 77.75694850865035 },\n      { name: 'Municipal council Rampur', latitude: 31.447472357397892, longitude: 77.62930798220307 },\n      { name: 'Nagar Nigam ', latitude: 31.105708, longitude: 77.175713 },\n      { name: 'Municipal corporation', latitude: 31.10521, longitude: 77.17073 },\n      { name: 'Municipal corporation building', latitude: 31.105440, longitude: 77.170790 },\n      { name: 'Municipal corporation Rajgarh', latitude: 30.90696, longitude: 77.10293 },\n      { name: 'Municipal corporation Nahan', latitude: 30.56262, longitude: 77.29394 },\n      { name: 'Municipal council Paonta sahib', latitude: 30.43613, longitude: 77.62395 },\n      { name: 'MC office hamirpur', latitude: 31.68563, longitude: 76.52325 },\n      { name: 'Municipal committee office', latitude: 31.68551, longitude: 76.5228 }\n  ];\n  \n\n    if (userLocation) {\n      let minDistance = Number.MAX_SAFE_INTEGER;\n      let nearestMunicipality = '';\n\n      municipalities.forEach(municipality => {\n        const distance = calculateDistance(userLocation, {\n          latitude: municipality.latitude,\n          longitude: municipality.longitude\n        });\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestMunicipality = municipality.name;\n        }\n      });\n\n      setNearestMunicipality(nearestMunicipality);\n      setMinDistance(minDistance);\n    }\n  }, [userLocation]);\n\n  return (\n    <div>\n      <h2 className='text-2xl mb-4 font-semibold'>Nearest Municipality Finder</h2>\n      {userLocation && (\n        <p>Your current location: <div className='font-medium'>{userLocation.latitude}, {userLocation.longitude}</div></p>\n      )}\n      {nearestMunicipality && minDistance && (\n        <p>The nearest municipality is <div className='font-medium'>{nearestMunicipality}</div> at a distance of <div className='font-medium'>..{minDistance.tofixed(2)}</div>kilometers.</p>\n      )}\n    </div>\n  );\n};\n\nexport default NearestMunicipalityFinder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}